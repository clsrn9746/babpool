<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!--lkjlk DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
  


	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 이 태그만 있으면 HandlerMapping을 비롯한 여러가지 mvc에 필요한 설정들이 자동으로 세팅 (기본값) annotation-driven태그 
		안에 내용을 하나하나 다 써도 됩니다. 80줄정도 -->
	<annotation-driven />


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	
	
	<!-- naverLoginVO Class에 대한 Bean설정 추가 -->

	<beans:bean id="naverLoginVO"
		class="com.babpool.naverLogin.NaverLoginVO"></beans:bean>

	<!-- 파일 첨부 설정 추가 -->
	<!--빈 이름은 무조건  multipartResolver -->
<!--  <beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
 </beans:bean> -->
 
 
 	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		
		<!-- 최대 업로드 가능한 바이트 크기(바이트 단위), -1은 제한이 없음을 의미 -->
		<beans:property name="maxUploadSize" value="10485760" />
		
		<!-- 업로드 요청을 변환할 때 사용할 문자 인코딩 방식 -->
		<beans:property name="defaultEncoding" value="utf-8" />
	
	</beans:bean>
 
 
 
 

	<!-- component-scan은 기본적으로 use-default-filter가 트루 일 때 @Controller,@Service,@Respoitory,@Component 
		등이 붙은 걸 빈으로 다 등록 (기본값도 true) DS은 Presentation,Controller단 빈만 등록 -> @Controller만 
		가지도록 -->
	<context:component-scan
		base-package="com.babpool" use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />

</context:component-scan>


	<!-- component-scan은 기본적으로  use-default-filter가 트루 일 때 
	@Controller,@Service,@Respoitory,@Component 등이 붙은 걸 빈으로 다 등록 	 (기본값도 true)
	DS은 Presentation,Controller단  빈만 등록 ->	@Controller만 가지도록 
	  
	-->
	<context:component-scan base-package="com.babpool"  use-default-filters="false">
		<context:include-filter type="annotation" 
		expression="org.springframework.stereotype.Controller"/>

	</context:component-scan>
	
<!-- 	CKEDitor -->
	<resources mapping="/ckeditor/**" location="/resources/ckeditor/" />
	


</beans:beans>